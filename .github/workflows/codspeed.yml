name: CodSpeed

on:
  push:
    branches:
      - "main" # or "master"
  pull_request:
  # `workflow_dispatch` allows CodSpeed to trigger backtest
  # performance analysis in order to generate initial data.
  workflow_dispatch:

jobs:
  benchmarks:
    name: Run benchmarks
    runs-on: ubuntu-latest
    env:
      CODSPEED_LOG: debug
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: extractions/setup-just@v2

      - name: Cache opencv
        uses: actions/cache@v3
        with:
          path: build-opencv
          key: ${{ runner.os }}-build-opencv

      # https://docs.opencv.org/4.x/d7/d9f/tutorial_linux_install.html
      - name: Build opencv
        run: |
          sudo apt update && sudo apt install -y cmake g++ wget unzip

          # Download and unpack sources
          wget -O opencv.zip https://github.com/opencv/opencv/archive/4.x.zip
          unzip opencv.zip

          # Create build directory
          mkdir -p build-opencv && cd build-opencv

          # Configure
          cmake -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo ../opencv-4.x

          # Build and install
          ninja -j$(nproc)
          sudo ninja install

      - name: Build the benchmark target(s)
        run: |
          just build-instrumentation

      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: just run
          token: ${{ secrets.CODSPEED_TOKEN }}
          upload-url: https://api.staging.preview.codspeed.io/upload

  benchmarks-walltime:
    name: Run walltime benchmarks
    runs-on: codspeed-macro-staging
    env:
      CODSPEED_LOG: debug
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: extractions/setup-just@v2

      - run: sudo apt-get update && sudo apt install -y libopencv-dev

      - name: Build the benchmark target(s)
        run: |
          just build-walltime

      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: just run
          token: ${{ secrets.CODSPEED_TOKEN }}
          upload-url: https://api.staging.preview.codspeed.io/upload
